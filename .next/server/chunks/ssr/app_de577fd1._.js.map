{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/_components/doctor-profile.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DoctorProfile = registerClientReference(\n    function() { throw new Error(\"Attempted to call DoctorProfile() from the server but DoctorProfile is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/doctors/[specialty]/[id]/_components/doctor-profile.jsx <module evaluation>\",\n    \"DoctorProfile\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oGACA","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/_components/doctor-profile.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DoctorProfile = registerClientReference(\n    function() { throw new Error(\"Attempted to call DoctorProfile() from the server but DoctorProfile is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/doctors/[specialty]/[id]/_components/doctor-profile.jsx\",\n    \"DoctorProfile\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gFACA","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/page.jsx"],"sourcesContent":["import { getDoctorById, getAvailableTimeSlots } from \"@/actions/appointments\";\nimport { DoctorProfile } from \"./_components/doctor-profile\";\nimport { redirect } from \"next/navigation\";\n\nexport default async function DoctorProfilePage({ params }) {\n  const { id } = await params;\n\n  try {\n    // Fetch doctor data and available slots in parallel\n    const [doctorData, slotsData] = await Promise.all([\n      getDoctorById(id),\n      getAvailableTimeSlots(id),\n    ]);\n\n    return (\n      <DoctorProfile\n        doctor={doctorData.doctor}\n        availableDays={slotsData.days || []}\n      />\n    );\n  } catch (error) {\n    console.error(\"Error loading doctor profile:\", error);\n    redirect(\"/doctors\");\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;;;;;AAEe,eAAe,kBAAkB,EAAE,MAAM,EAAE;IACxD,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,IAAI;QACF,oDAAoD;QACpD,MAAM,CAAC,YAAY,UAAU,GAAG,MAAM,QAAQ,GAAG,CAAC;YAChD,CAAA,GAAA,uHAAA,CAAA,gBAAa,AAAD,EAAE;YACd,CAAA,GAAA,uHAAA,CAAA,wBAAqB,AAAD,EAAE;SACvB;QAED,qBACE,8OAAC,0LAAA,CAAA,gBAAa;YACZ,QAAQ,WAAW,MAAM;YACzB,eAAe,UAAU,IAAI,IAAI,EAAE;;;;;;IAGzC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;AACF","debugId":null}}]
}