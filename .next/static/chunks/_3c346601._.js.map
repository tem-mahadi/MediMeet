{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props} />\n  );\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAEf;KAfS","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CardHeader({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CardTitle({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props} />\n  );\n}\n\nfunction CardDescription({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props} />\n  );\n}\n\nfunction CardAction({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CardContent({\n  className,\n  ...props\n}) {\n  return (<div data-slot=\"card-content\" className={cn(\"px-6\", className)} {...props} />);\n}\n\nfunction CardFooter({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props} />\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAEA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS;AAeT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBAAQ,6LAAC;QAAI,aAAU;QAAe,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QAAa,GAAG,KAAK;;;;;;AACnF;MALS;AAOT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/separator.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACJ;IACC,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;KAdS","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/tabs.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props} />\n  );\n}\n\nfunction TabsList({\n  className,\n  ...props\n}) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props} />\n  );\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;KAVS;AAYT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/_components/slot-picker.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Clock, ChevronRight } from \"lucide-react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nexport function SlotPicker({ days, onSelectSlot }) {\n  const [selectedSlot, setSelectedSlot] = useState(null);\n\n  // Find first day with slots as default tab\n  const firstDayWithSlots =\n    days.find((day) => day.slots.length > 0)?.date || days[0]?.date;\n  const [activeTab, setActiveTab] = useState(firstDayWithSlots);\n\n  const handleSlotSelect = (slot) => {\n    setSelectedSlot(slot);\n  };\n\n  const confirmSelection = () => {\n    if (selectedSlot) {\n      onSelectSlot(selectedSlot);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Tabs\n        defaultValue={activeTab}\n        onValueChange={setActiveTab}\n        className=\"w-full\"\n      >\n        <TabsList className=\"w-full justify-start overflow-x-auto\">\n          {days.map((day) => (\n            <TabsTrigger\n              key={day.date}\n              value={day.date}\n              disabled={day.slots.length === 0}\n              className={\n                day.slots.length === 0 ? \"opacity-50 cursor-not-allowed\" : \"\"\n              }\n            >\n              <div className=\"flex gap-2\">\n                <div className=\" opacity-80\">\n                  {format(new Date(day.date), \"MMM d\")}\n                </div>\n                <div>({format(new Date(day.date), \"EEE\")})</div>\n              </div>\n              {day.slots.length > 0 && (\n                <div className=\"ml-2 bg-emerald-900/30 text-emerald-400 text-xs px-2 py-1 rounded\">\n                  {day.slots.length}\n                </div>\n              )}\n            </TabsTrigger>\n          ))}\n        </TabsList>\n\n        {days.map((day) => (\n          <TabsContent key={day.date} value={day.date} className=\"pt-4\">\n            {day.slots.length === 0 ? (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                No available slots for this day.\n              </div>\n            ) : (\n              <div className=\"space-y-3\">\n                <h3 className=\"text-lg font-medium text-white mb-2\">\n                  {day.displayDate}\n                </h3>\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2\">\n                  {day.slots.map((slot) => (\n                    <Card\n                      key={slot.startTime}\n                      className={`border-emerald-900/20 cursor-pointer transition-all ${\n                        selectedSlot?.startTime === slot.startTime\n                          ? \"bg-emerald-900/30 border-emerald-600\"\n                          : \"hover:border-emerald-700/40\"\n                      }`}\n                      onClick={() => handleSlotSelect(slot)}\n                    >\n                      <CardContent className=\"p-3 flex items-center\">\n                        <Clock\n                          className={`h-4 w-4 mr-2 ${\n                            selectedSlot?.startTime === slot.startTime\n                              ? \"text-emerald-400\"\n                              : \"text-muted-foreground\"\n                          }`}\n                        />\n                        <span\n                          className={\n                            selectedSlot?.startTime === slot.startTime\n                              ? \"text-white\"\n                              : \"text-muted-foreground\"\n                          }\n                        >\n                          {format(new Date(slot.startTime), \"h:mm a\")}\n                        </span>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            )}\n          </TabsContent>\n        ))}\n      </Tabs>\n\n      <div className=\"flex justify-end\">\n        <Button\n          onClick={confirmSelection}\n          disabled={!selectedSlot}\n          className=\"bg-emerald-600 hover:bg-emerald-700\"\n        >\n          Continue\n          <ChevronRight className=\"ml-2 h-4 w-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAPA;;;;;;;AASO,SAAS,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,2CAA2C;IAC3C,MAAM,oBACJ,KAAK,IAAI,CAAC,CAAC,MAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,QAAQ,IAAI,CAAC,EAAE,EAAE;IAC7D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,mBAAmB,CAAC;QACxB,gBAAgB;IAClB;IAEA,MAAM,mBAAmB;QACvB,IAAI,cAAc;YAChB,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,4HAAA,CAAA,OAAI;gBACH,cAAc;gBACd,eAAe;gBACf,WAAU;;kCAEV,6LAAC,4HAAA,CAAA,WAAQ;wBAAC,WAAU;kCACjB,KAAK,GAAG,CAAC,CAAC,oBACT,6LAAC,4HAAA,CAAA,cAAW;gCAEV,OAAO,IAAI,IAAI;gCACf,UAAU,IAAI,KAAK,CAAC,MAAM,KAAK;gCAC/B,WACE,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,kCAAkC;;kDAG7D,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACZ,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,IAAI,IAAI,GAAG;;;;;;0DAE9B,6LAAC;;oDAAI;oDAAE,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,IAAI,IAAI,GAAG;oDAAO;;;;;;;;;;;;;oCAE1C,IAAI,KAAK,CAAC,MAAM,GAAG,mBAClB,6LAAC;wCAAI,WAAU;kDACZ,IAAI,KAAK,CAAC,MAAM;;;;;;;+BAfhB,IAAI,IAAI;;;;;;;;;;oBAsBlB,KAAK,GAAG,CAAC,CAAC,oBACT,6LAAC,4HAAA,CAAA,cAAW;4BAAgB,OAAO,IAAI,IAAI;4BAAE,WAAU;sCACpD,IAAI,KAAK,CAAC,MAAM,KAAK,kBACpB,6LAAC;gCAAI,WAAU;0CAAyC;;;;;qDAIxD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDACX,IAAI,WAAW;;;;;;kDAElB,6LAAC;wCAAI,WAAU;kDACZ,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,qBACd,6LAAC,4HAAA,CAAA,OAAI;gDAEH,WAAW,CAAC,oDAAoD,EAC9D,cAAc,cAAc,KAAK,SAAS,GACtC,yCACA,+BACJ;gDACF,SAAS,IAAM,iBAAiB;0DAEhC,cAAA,6LAAC,4HAAA,CAAA,cAAW;oDAAC,WAAU;;sEACrB,6LAAC,uMAAA,CAAA,QAAK;4DACJ,WAAW,CAAC,aAAa,EACvB,cAAc,cAAc,KAAK,SAAS,GACtC,qBACA,yBACJ;;;;;;sEAEJ,6LAAC;4DACC,WACE,cAAc,cAAc,KAAK,SAAS,GACtC,eACA;sEAGL,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,KAAK,SAAS,GAAG;;;;;;;;;;;;+CAvBjC,KAAK,SAAS;;;;;;;;;;;;;;;;2BAbb,IAAI,IAAI;;;;;;;;;;;0BAgD9B,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,8HAAA,CAAA,SAAM;oBACL,SAAS;oBACT,UAAU,CAAC;oBACX,WAAU;;wBACX;sCAEC,6LAAC,yNAAA,CAAA,eAAY;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKlC;GA/GgB;KAAA","debugId":null}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({\n  className,\n  ...props\n}) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS","debugId":null}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/label.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS","debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/actions/appointments.js"],"sourcesContent":["\"use server\";\n\nimport { db } from \"@/lib/prisma\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { revalidatePath } from \"next/cache\";\n// deductCreditsForAppointment handled inside booking transaction to avoid race conditions\nimport { Vonage } from \"@vonage/server-sdk\";\nimport { addDays, addMinutes, format, isBefore, endOfDay } from \"date-fns\";\nimport { Auth } from \"@vonage/auth\";\n\n// Initialize Vonage Video API client\nconst credentials = new Auth({\n  applicationId: process.env.NEXT_PUBLIC_VONAGE_APPLICATION_ID,\n  privateKey: process.env.VONAGE_PRIVATE_KEY,\n});\nconst options = {};\nconst vonage = new Vonage(credentials, options);\n\n/**\n * Book a new appointment with a doctor\n */\nexport async function bookAppointment(formData) {\n  const { userId } = await auth();\n\n  if (!userId) {\n    throw new Error(\"Unauthorized\");\n  }\n\n  try {\n    // Get the patient user\n    const patient = await db.user.findUnique({\n      where: {\n        clerkUserId: userId,\n        role: \"PATIENT\",\n      },\n    });\n\n    if (!patient) {\n      throw new Error(\"Patient not found\");\n    }\n\n    // Parse form data\n    const doctorId = formData.get(\"doctorId\");\n    const startTime = new Date(formData.get(\"startTime\"));\n    const endTime = new Date(formData.get(\"endTime\"));\n    const patientDescription = formData.get(\"description\") || null;\n\n    // Validate input\n    if (!doctorId || !startTime || !endTime) {\n      throw new Error(\"Doctor, start time, and end time are required\");\n    }\n\n    // Check if the doctor exists and is verified\n    const doctor = await db.user.findUnique({\n      where: {\n        id: doctorId,\n        role: \"DOCTOR\",\n        verificationStatus: \"VERIFIED\",\n      },\n    });\n\n    if (!doctor) {\n      throw new Error(\"Doctor not found or not verified\");\n    }\n\n    // Check if the patient has enough credits (2 credits per appointment)\n    if (patient.credits < 2) {\n      throw new Error(\"Insufficient credits to book an appointment\");\n    }\n\n    // Create a new Vonage Video API session (do this before DB tx)\n    const sessionId = await createVideoSession();\n\n    // Perform overlap checks, credit transfer and appointment creation inside a single serializable transaction\n    const appointment = await db.$transaction(\n      async (tx) => {\n        // Re-fetch patient and doctor inside transaction to ensure up-to-date values\n        const txPatient = await tx.user.findUnique({ where: { id: patient.id } });\n        const txDoctor = await tx.user.findUnique({ where: { id: doctor.id } });\n\n        if (!txPatient) throw new Error(\"Patient not found (tx)\");\n        if (!txDoctor) throw new Error(\"Doctor not found (tx)\");\n\n        // Check overlapping appointments for doctor\n        const overlappingForDoctor = await tx.appointment.findFirst({\n          where: {\n            doctorId: doctorId,\n            status: \"SCHEDULED\",\n            OR: [\n              {\n                startTime: { lte: startTime },\n                endTime: { gt: startTime },\n              },\n              {\n                startTime: { lt: endTime },\n                endTime: { gte: endTime },\n              },\n              {\n                startTime: { gte: startTime },\n                endTime: { lte: endTime },\n              },\n            ],\n          },\n        });\n\n        if (overlappingForDoctor) {\n          throw new Error(\"This time slot is already booked for the doctor\");\n        }\n\n        // Check overlapping appointments for patient (prevent patient booking multiple at same time)\n        const overlappingForPatient = await tx.appointment.findFirst({\n          where: {\n            patientId: txPatient.id,\n            status: \"SCHEDULED\",\n            OR: [\n              {\n                startTime: { lte: startTime },\n                endTime: { gt: startTime },\n              },\n              {\n                startTime: { lt: endTime },\n                endTime: { gte: endTime },\n              },\n              {\n                startTime: { gte: startTime },\n                endTime: { lte: endTime },\n              },\n            ],\n          },\n        });\n\n        if (overlappingForPatient) {\n          throw new Error(\"You already have an appointment at this time\");\n        }\n\n        // Ensure patient has sufficient credits inside transaction\n        if (txPatient.credits < 2) {\n          throw new Error(\"Insufficient credits to book an appointment\");\n        }\n\n        // Create credit transactions and update balances\n        await tx.creditTransaction.create({\n          data: {\n            userId: txPatient.id,\n            amount: -2,\n            type: \"APPOINTMENT_DEDUCTION\",\n          },\n        });\n\n        await tx.creditTransaction.create({\n          data: {\n            userId: txDoctor.id,\n            amount: 2,\n            type: \"APPOINTMENT_DEDUCTION\",\n          },\n        });\n\n        await tx.user.update({\n          where: { id: txPatient.id },\n          data: { credits: { decrement: 2 } },\n        });\n\n        await tx.user.update({\n          where: { id: txDoctor.id },\n          data: { credits: { increment: 2 } },\n        });\n\n        // Create the appointment\n        const created = await tx.appointment.create({\n          data: {\n            patientId: txPatient.id,\n            doctorId: txDoctor.id,\n            startTime,\n            endTime,\n            patientDescription,\n            status: \"SCHEDULED\",\n            videoSessionId: sessionId,\n          },\n        });\n\n        return created;\n      },\n      { isolationLevel: \"Serializable\" }\n    );\n\n  revalidatePath(\"/appointments\");\n  revalidatePath(\"/doctor\");\n  return { success: true, appointment: appointment };\n  } catch (error) {\n    console.error(\"Failed to book appointment:\", error);\n    throw new Error(\"Failed to book appointment:\" + error.message);\n  }\n}\n\n/**\n * Generate a Vonage Video API session\n */\nasync function createVideoSession() {\n  try {\n    const session = await vonage.video.createSession({ mediaMode: \"routed\" });\n    return session.sessionId;\n  } catch (error) {\n    throw new Error(\"Failed to create video session: \" + error.message);\n  }\n}\n\n/**\n * Generate a token for a video session\n * This will be called when either doctor or patient is about to join the call\n */\nexport async function generateVideoToken(formData) {\n  const { userId } = await auth();\n\n  if (!userId) {\n    throw new Error(\"Unauthorized\");\n  }\n\n  try {\n    const user = await db.user.findUnique({\n      where: {\n        clerkUserId: userId,\n      },\n    });\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    const appointmentId = formData.get(\"appointmentId\");\n\n    if (!appointmentId) {\n      throw new Error(\"Appointment ID is required\");\n    }\n\n    // Find the appointment and verify the user is part of it\n    const appointment = await db.appointment.findUnique({\n      where: {\n        id: appointmentId,\n      },\n    });\n\n    if (!appointment) {\n      throw new Error(\"Appointment not found\");\n    }\n\n    // Verify the user is either the doctor or the patient for this appointment\n    if (appointment.doctorId !== user.id && appointment.patientId !== user.id) {\n      throw new Error(\"You are not authorized to join this call\");\n    }\n\n    // Verify the appointment is scheduled\n    if (appointment.status !== \"SCHEDULED\") {\n      throw new Error(\"This appointment is not currently scheduled\");\n    }\n\n    // Verify the appointment is within a valid time range (e.g., starting 5 minutes before scheduled time)\n    const now = new Date();\n    const appointmentTime = new Date(appointment.startTime);\n    const timeDifference = (appointmentTime - now) / (1000 * 60); // difference in minutes\n\n    if (timeDifference > 30) {\n      throw new Error(\n        \"The call will be available 30 minutes before the scheduled time\"\n      );\n    }\n\n    // Generate a token for the video session\n    // Token expires 2 hours after the appointment start time\n    const appointmentEndTime = new Date(appointment.endTime);\n    const expirationTime =\n      Math.floor(appointmentEndTime.getTime() / 1000) + 60 * 60; // 1 hour after end time\n\n    // Use user's name and role as connection data\n    const connectionData = JSON.stringify({\n      name: user.name,\n      role: user.role,\n      userId: user.id,\n    });\n\n    // Generate the token with appropriate role and expiration\n    const token = vonage.video.generateClientToken(appointment.videoSessionId, {\n      role: \"publisher\", // Both doctor and patient can publish streams\n      expireTime: expirationTime,\n      data: connectionData,\n    });\n\n    // Update the appointment with the token\n    await db.appointment.update({\n      where: {\n        id: appointmentId,\n      },\n      data: {\n        videoSessionToken: token,\n      },\n    });\n\n    return {\n      success: true,\n      videoSessionId: appointment.videoSessionId,\n      token: token,\n    };\n  } catch (error) {\n    console.error(\"Failed to generate video token:\", error);\n    throw new Error(\"Failed to generate video token:\" + error.message);\n  }\n}\n\n/**\n * Get doctor by ID\n */\nexport async function getDoctorById(doctorId) {\n  try {\n    const doctor = await db.user.findUnique({\n      where: {\n        id: doctorId,\n        role: \"DOCTOR\",\n        verificationStatus: \"VERIFIED\",\n      },\n    });\n\n    if (!doctor) {\n      throw new Error(\"Doctor not found\");\n    }\n\n    return { doctor };\n  } catch (error) {\n    console.error(\"Failed to fetch doctor:\", error);\n    throw new Error(\"Failed to fetch doctor details\");\n  }\n}\n\n/**\n * Get available time slots for booking for the next 4 days\n */\nexport async function getAvailableTimeSlots(doctorId) {\n  try {\n    // Validate doctor existence and verification\n    const doctor = await db.user.findUnique({\n      where: {\n        id: doctorId,\n        role: \"DOCTOR\",\n        verificationStatus: \"VERIFIED\",\n      },\n    });\n\n    if (!doctor) {\n      throw new Error(\"Doctor not found or not verified\");\n    }\n\n    // Fetch a single availability record\n    const availability = await db.availability.findFirst({\n      where: {\n        doctorId: doctor.id,\n        status: \"AVAILABLE\",\n      },\n    });\n\n    if (!availability) {\n      throw new Error(\"No availability set by doctor\");\n    }\n\n    // Get the next 4 days\n    const now = new Date();\n    const days = [now, addDays(now, 1), addDays(now, 2), addDays(now, 3)];\n\n    // Fetch existing appointments for the doctor over the next 4 days\n    const lastDay = endOfDay(days[3]);\n    const existingAppointments = await db.appointment.findMany({\n      where: {\n        doctorId: doctor.id,\n        status: \"SCHEDULED\",\n        startTime: {\n          lte: lastDay,\n        },\n      },\n    });\n\n    const availableSlotsByDay = {};\n\n    // For each of the next 4 days, generate available slots\n    for (const day of days) {\n      const dayString = format(day, \"yyyy-MM-dd\");\n      availableSlotsByDay[dayString] = [];\n\n      // Create a copy of the availability start/end times for this day\n      const availabilityStart = new Date(availability.startTime);\n      const availabilityEnd = new Date(availability.endTime);\n\n      // Set the day to the current day we're processing\n      availabilityStart.setFullYear(\n        day.getFullYear(),\n        day.getMonth(),\n        day.getDate()\n      );\n      availabilityEnd.setFullYear(\n        day.getFullYear(),\n        day.getMonth(),\n        day.getDate()\n      );\n\n      let current = new Date(availabilityStart);\n      const end = new Date(availabilityEnd);\n\n      while (\n        isBefore(addMinutes(current, 30), end) ||\n        +addMinutes(current, 30) === +end\n      ) {\n        const next = addMinutes(current, 30);\n\n        // Skip past slots\n        if (isBefore(current, now)) {\n          current = next;\n          continue;\n        }\n\n        const overlaps = existingAppointments.some((appointment) => {\n          const aStart = new Date(appointment.startTime);\n          const aEnd = new Date(appointment.endTime);\n\n          return (\n            (current >= aStart && current < aEnd) ||\n            (next > aStart && next <= aEnd) ||\n            (current <= aStart && next >= aEnd)\n          );\n        });\n\n        if (!overlaps) {\n          availableSlotsByDay[dayString].push({\n            startTime: current.toISOString(),\n            endTime: next.toISOString(),\n            formatted: `${format(current, \"h:mm a\")} - ${format(\n              next,\n              \"h:mm a\"\n            )}`,\n            day: format(current, \"EEEE, MMMM d\"),\n          });\n        }\n\n        current = next;\n      }\n    }\n\n    // Convert to array of slots grouped by day for easier consumption by the UI\n    const result = Object.entries(availableSlotsByDay).map(([date, slots]) => ({\n      date,\n      displayDate:\n        slots.length > 0\n          ? slots[0].day\n          : format(new Date(date), \"EEEE, MMMM d\"),\n      slots,\n    }));\n\n    return { days: result };\n  } catch (error) {\n    console.error(\"Failed to fetch available slots:\", error);\n    throw new Error(\"Failed to fetch available time slots: \" + error.message);\n  }\n}\n"],"names":[],"mappings":";;;;;;IAqBsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/hooks/use-fetch.js"],"sourcesContent":["import { useState } from \"react\";\nimport { toast } from \"sonner\";\n\nconst useFetch = (cb) => {\n  const [data, setData] = useState(undefined);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fn = async (...args) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await cb(...args);\n      setData(response);\n      setError(null);\n    } catch (error) {\n      setError(error);\n      toast.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, loading, error, fn, setData };\n};\n\nexport default useFetch;\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEA,MAAM,WAAW,CAAC;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QAAE;QAAM;QAAS;QAAO;QAAI;IAAQ;AAC7C;GAtBM;uCAwBS","debugId":null}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/_components/appointment-form.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { format } from \"date-fns\";\nimport { Loader2, Clock, ArrowLeft, Calendar, CreditCard } from \"lucide-react\";\nimport { bookAppointment } from \"@/actions/appointments\";\nimport { toast } from \"sonner\";\nimport useFetch from \"@/hooks/use-fetch\";\n\nexport function AppointmentForm({ doctorId, slot, onBack, onComplete }) {\n  const [description, setDescription] = useState(\"\");\n\n  // Use the useFetch hook to handle loading, data, and error states\n  const { loading, data, fn: submitBooking } = useFetch(bookAppointment);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Create form data\n    const formData = new FormData();\n    formData.append(\"doctorId\", doctorId);\n    formData.append(\"startTime\", slot.startTime);\n    formData.append(\"endTime\", slot.endTime);\n    formData.append(\"description\", description);\n\n    // Submit booking using the function from useFetch\n    await submitBooking(formData);\n  };\n\n  // Handle response after booking attempt\n  useEffect(() => {\n    if (data) {\n      if (data.success) {\n        toast.success(\"Appointment booked successfully!\");\n        onComplete();\n      }\n    }\n  }, [data]);\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"bg-muted/20 p-4 rounded-lg border border-emerald-900/20 space-y-3\">\n        <div className=\"flex items-center\">\n          <Calendar className=\"h-5 w-5 text-emerald-400 mr-2\" />\n          <span className=\"text-white font-medium\">\n            {format(new Date(slot.startTime), \"EEEE, MMMM d, yyyy\")}\n          </span>\n        </div>\n        <div className=\"flex items-center\">\n          <Clock className=\"h-5 w-5 text-emerald-400 mr-2\" />\n          <span className=\"text-white\">{slot.formatted}</span>\n        </div>\n        <div className=\"flex items-center\">\n          <CreditCard className=\"h-5 w-5 text-emerald-400 mr-2\" />\n          <span className=\"text-muted-foreground\">\n            Cost: <span className=\"text-white font-medium\">2 credits</span>\n          </span>\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"description\">\n          Describe your medical concern (optional)\n        </Label>\n        <Textarea\n          id=\"description\"\n          placeholder=\"Please provide any details about your medical concern or what you'd like to discuss in the appointment...\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"bg-background border-emerald-900/20 h-32\"\n        />\n        <p className=\"text-sm text-muted-foreground\">\n          This information will be shared with the doctor before your\n          appointment.\n        </p>\n      </div>\n\n      <div className=\"flex justify-between pt-2\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={onBack}\n          disabled={loading}\n          className=\"border-emerald-900/30\"\n        >\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\n          Change Time Slot\n        </Button>\n        <Button\n          type=\"submit\"\n          disabled={loading}\n          className=\"bg-emerald-600 hover:bg-emerald-700\"\n        >\n          {loading ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Booking...\n            </>\n          ) : (\n            \"Confirm Booking\"\n          )}\n        </Button>\n      </div>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAVA;;;;;;;;;;AAYO,SAAS,gBAAgB,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE;;IACpE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,kEAAkE;IAClE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,aAAa,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAQ,AAAD,EAAE,kJAAA,CAAA,kBAAe;IAErE,yBAAyB;IACzB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,mBAAmB;QACnB,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,YAAY;QAC5B,SAAS,MAAM,CAAC,aAAa,KAAK,SAAS;QAC3C,SAAS,MAAM,CAAC,WAAW,KAAK,OAAO;QACvC,SAAS,MAAM,CAAC,eAAe;QAE/B,kDAAkD;QAClD,MAAM,cAAc;IACtB;IAEA,wCAAwC;IACxC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,IAAI,MAAM;gBACR,IAAI,KAAK,OAAO,EAAE;oBAChB,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;oBACd;gBACF;YACF;QACF;oCAAG;QAAC;KAAK;IAET,qBACE,6LAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,6MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC;gCAAK,WAAU;0CACb,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,KAAK,SAAS,GAAG;;;;;;;;;;;;kCAGtC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,uMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;0CACjB,6LAAC;gCAAK,WAAU;0CAAc,KAAK,SAAS;;;;;;;;;;;;kCAE9C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,qNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,6LAAC;gCAAK,WAAU;;oCAAwB;kDAChC,6LAAC;wCAAK,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;;;;;;;0BAKrD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6HAAA,CAAA,QAAK;wBAAC,SAAQ;kCAAc;;;;;;kCAG7B,6LAAC,gIAAA,CAAA,WAAQ;wBACP,IAAG;wBACH,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,WAAU;;;;;;kCAEZ,6LAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;0BAM/C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,8HAAA,CAAA,SAAM;wBACL,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,UAAU;wBACV,WAAU;;0CAEV,6LAAC,mNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGxC,6LAAC,8HAAA,CAAA,SAAM;wBACL,MAAK;wBACL,UAAU;wBACV,WAAU;kCAET,wBACC;;8CACE,6LAAC,oNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;gCAA8B;;2CAInD;;;;;;;;;;;;;;;;;;AAMZ;GAjGgB;;QAI+B,wHAAA,CAAA,UAAQ;;;KAJvC","debugId":null}},
    {"offset": {"line": 993, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/alert.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props} />\n  );\n}\n\nfunction AlertTitle({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\", className)}\n      {...props} />\n  );\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;KAZS;AAcT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,+DAA+D;QAC5E,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS","debugId":null}},
    {"offset": {"line": 1070, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/_components/doctor-profile.jsx"],"sourcesContent":["// /app/doctors/[id]/_components/doctor-profile.jsx\n\"use client\";\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  User,\n  Calendar,\n  Clock,\n  Medal,\n  FileText,\n  ChevronDown,\n  ChevronUp,\n  AlertCircle,\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { SlotPicker } from \"./slot-picker\";\nimport { AppointmentForm } from \"./appointment-form\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\nexport function DoctorProfile({ doctor, availableDays }) {\n  const [showBooking, setShowBooking] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const router = useRouter();\n\n  // Calculate total available slots\n  const totalSlots = availableDays?.reduce(\n    (total, day) => total + day.slots.length,\n    0\n  );\n\n  const toggleBooking = () => {\n    setShowBooking(!showBooking);\n    if (!showBooking) {\n      // Scroll to booking section when expanding\n      setTimeout(() => {\n        document.getElementById(\"booking-section\")?.scrollIntoView({\n          behavior: \"smooth\",\n        });\n      }, 100);\n    }\n  };\n\n  const handleSlotSelect = (slot) => {\n    setSelectedSlot(slot);\n  };\n\n  const handleBookingComplete = () => {\n    router.push(\"/appointments\");\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n      {/* Left column - Doctor Photo and Quick Info (fixed on scroll) */}\n      <div className=\"md:col-span-1\">\n        <div className=\"md:sticky md:top-24\">\n          <Card className=\"border-emerald-900/20\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex flex-col items-center text-center\">\n                <div className=\"relative w-32 h-32 rounded-full overflow-hidden mb-4 bg-emerald-900/20\">\n                  {doctor.imageUrl ? (\n                    <Image\n                      src={doctor.imageUrl}\n                      alt={doctor.name}\n                      fill\n                      className=\"object-cover\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full flex items-center justify-center\">\n                      <User className=\"h-16 w-16 text-emerald-400\" />\n                    </div>\n                  )}\n                </div>\n\n                <h2 className=\"text-xl font-bold text-white mb-1\">\n                  Dr. {doctor.name}\n                </h2>\n\n                <Badge\n                  variant=\"outline\"\n                  className=\"bg-emerald-900/20 border-emerald-900/30 text-emerald-400 mb-4\"\n                >\n                  {doctor.specialty}\n                </Badge>\n\n                <div className=\"flex items-center justify-center mb-2\">\n                  <Medal className=\"h-4 w-4 text-emerald-400 mr-2\" />\n                  <span className=\"text-muted-foreground\">\n                    {doctor.experience} years experience\n                  </span>\n                </div>\n\n                <Button\n                  onClick={toggleBooking}\n                  className=\"w-full bg-emerald-600 hover:bg-emerald-700 mt-4\"\n                >\n                  {showBooking ? (\n                    <>\n                      Hide Booking\n                      <ChevronUp className=\"ml-2 h-4 w-4\" />\n                    </>\n                  ) : (\n                    <>\n                      Book Appointment\n                      <ChevronDown className=\"ml-2 h-4 w-4\" />\n                    </>\n                  )}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Right column - Doctor Details and Booking Section */}\n      <div className=\"md:col-span-2 space-y-6\">\n        <Card className=\"border-emerald-900/20\">\n          <CardHeader>\n            <CardTitle className=\"text-xl font-bold text-white\">\n              About Dr. {doctor.name}\n            </CardTitle>\n            <CardDescription>\n              Professional background and expertise\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5 text-emerald-400\" />\n                <h3 className=\"text-white font-medium\">Description</h3>\n              </div>\n              <p className=\"text-muted-foreground whitespace-pre-line\">\n                {doctor.description}\n              </p>\n            </div>\n\n            <Separator className=\"bg-emerald-900/20\" />\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"h-5 w-5 text-emerald-400\" />\n                <h3 className=\"text-white font-medium\">Availability</h3>\n              </div>\n              {totalSlots > 0 ? (\n                <div className=\"flex items-center\">\n                  <Calendar className=\"h-5 w-5 text-emerald-400 mr-2\" />\n                  <p className=\"text-muted-foreground\">\n                    {totalSlots} time slots available for booking over the next\n                    4 days\n                  </p>\n                </div>\n              ) : (\n                <Alert>\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>\n                    No available slots for the next 4 days. Please check back\n                    later.\n                  </AlertDescription>\n                </Alert>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Booking Section - Conditionally rendered */}\n        {showBooking && (\n          <div id=\"booking-section\">\n            <Card className=\"border-emerald-900/20\">\n              <CardHeader>\n                <CardTitle className=\"text-xl font-bold text-white\">\n                  Book an Appointment\n                </CardTitle>\n                <CardDescription>\n                  Select a time slot and provide details for your consultation\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                {totalSlots > 0 ? (\n                  <>\n                    {/* Slot selection step */}\n                    {!selectedSlot && (\n                      <SlotPicker\n                        days={availableDays}\n                        onSelectSlot={handleSlotSelect}\n                      />\n                    )}\n\n                    {/* Appointment form step */}\n                    {selectedSlot && (\n                      <AppointmentForm\n                        doctorId={doctor.id}\n                        slot={selectedSlot}\n                        onBack={() => setSelectedSlot(null)}\n                        onComplete={handleBookingComplete}\n                      />\n                    )}\n                  </>\n                ) : (\n                  <div className=\"text-center py-6\">\n                    <Calendar className=\"h-12 w-12 mx-auto text-muted-foreground mb-3\" />\n                    <h3 className=\"text-xl font-medium text-white mb-2\">\n                      No available slots\n                    </h3>\n                    <p className=\"text-muted-foreground\">\n                      This doctor doesn&apos;t have any available appointment\n                      slots for the next 4 days. Please check back later or try\n                      another doctor.\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}