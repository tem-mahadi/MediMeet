{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CardHeader({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CardTitle({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props} />\n  );\n}\n\nfunction CardDescription({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props} />\n  );\n}\n\nfunction CardAction({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CardContent({\n  className,\n  ...props\n}) {\n  return (<div data-slot=\"card-content\" className={cn(\"px-6\", className)} {...props} />);\n}\n\nfunction CardFooter({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props} />\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAEA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS;AAeT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBAAQ,6LAAC;QAAI,aAAU;QAAe,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QAAa,GAAG,KAAK;;;;;;AACnF;MALS;AAOT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props} />\n  );\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAEf;KAfS","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/separator.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACJ;IACC,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\n}\n\nfunction DialogTrigger({\n  ...props\n}) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\n}\n\nfunction DialogPortal({\n  ...props\n}) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\n}\n\nfunction DialogClose({\n  ...props\n}) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}>\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  );\n}\n\nfunction DialogHeader({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props} />\n  );\n}\n\nfunction DialogFooter({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\n      {...props} />\n  );\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props} />\n  );\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props} />\n  );\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;oBACA,iCACC,6LAAC,qKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CACV,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;MA5BS;AA8BT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;KAdS","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/actions/admin.js"],"sourcesContent":["\"use server\";\n\nimport { db } from \"@/lib/prisma\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { revalidatePath } from \"next/cache\";\n\n/**\n * Verifies if current user has admin role\n */\nexport async function verifyAdmin() {\n  const { userId } = await auth();\n\n  if (!userId) {\n    return false;\n  }\n\n  try {\n    const user = await db.user.findUnique({\n      where: {\n        clerkUserId: userId,\n      },\n    });\n\n    return user?.role === \"ADMIN\";\n  } catch (error) {\n    console.error(\"Failed to verify admin:\", error);\n    return false;\n  }\n}\n\n/**\n * Gets all doctors with pending verification\n */\nexport async function getPendingDoctors() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const pendingDoctors = await db.user.findMany({\n      where: {\n        role: \"DOCTOR\",\n        verificationStatus: \"PENDING\",\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    return { doctors: pendingDoctors };\n  } catch (error) {\n    throw new Error(\"Failed to fetch pending doctors\");\n  }\n}\n\n/**\n * Gets all verified doctors\n */\nexport async function getVerifiedDoctors() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const verifiedDoctors = await db.user.findMany({\n      where: {\n        role: \"DOCTOR\",\n        verificationStatus: \"VERIFIED\",\n      },\n      orderBy: {\n        name: \"asc\",\n      },\n    });\n\n    return { doctors: verifiedDoctors };\n  } catch (error) {\n    console.error(\"Failed to get verified doctors:\", error);\n    return { error: \"Failed to fetch verified doctors\" };\n  }\n}\n\n/**\n * Updates a doctor's verification status\n */\nexport async function updateDoctorStatus(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const doctorId = formData.get(\"doctorId\");\n  const status = formData.get(\"status\");\n\n  if (!doctorId || ![\"VERIFIED\", \"REJECTED\"].includes(status)) {\n    throw new Error(\"Invalid input\");\n  }\n\n  try {\n    await db.user.update({\n      where: {\n        id: doctorId,\n      },\n      data: {\n        verificationStatus: status,\n      },\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to update doctor status:\", error);\n    throw new Error(`Failed to update doctor status: ${error.message}`);\n  }\n}\n\n/**\n * Suspends or reinstates a doctor\n */\nexport async function updateDoctorActiveStatus(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const doctorId = formData.get(\"doctorId\");\n  const suspend = formData.get(\"suspend\") === \"true\";\n\n  if (!doctorId) {\n    throw new Error(\"Doctor ID is required\");\n  }\n\n  try {\n    const status = suspend ? \"PENDING\" : \"VERIFIED\";\n\n    await db.user.update({\n      where: {\n        id: doctorId,\n      },\n      data: {\n        verificationStatus: status,\n      },\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to update doctor active status:\", error);\n    throw new Error(`Failed to update doctor status: ${error.message}`);\n  }\n}\n\n/**\n * Gets all pending payouts that need admin approval\n */\nexport async function getPendingPayouts() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const pendingPayouts = await db.payout.findMany({\n      where: {\n        status: \"PROCESSING\",\n      },\n      include: {\n        doctor: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            specialty: true,\n            credits: true,\n          },\n        },\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    return { payouts: pendingPayouts };\n  } catch (error) {\n    console.error(\"Failed to fetch pending payouts:\", error);\n    throw new Error(\"Failed to fetch pending payouts\");\n  }\n}\n\n/**\n * Approves a payout request and deducts credits from doctor's account\n */\nexport async function approvePayout(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const payoutId = formData.get(\"payoutId\");\n\n  if (!payoutId) {\n    throw new Error(\"Payout ID is required\");\n  }\n\n  try {\n    // Get admin user info\n    const { userId } = await auth();\n    const admin = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    // Find the payout request\n    const payout = await db.payout.findUnique({\n      where: {\n        id: payoutId,\n        status: \"PROCESSING\",\n      },\n      include: {\n        doctor: true,\n      },\n    });\n\n    if (!payout) {\n      throw new Error(\"Payout request not found or already processed\");\n    }\n\n    // Check if doctor has enough credits\n    if (payout.doctor.credits < payout.credits) {\n      throw new Error(\"Doctor doesn't have enough credits for this payout\");\n    }\n\n    // Process the payout in a transaction\n    await db.$transaction(async (tx) => {\n      // Update payout status to PROCESSED\n      await tx.payout.update({\n        where: {\n          id: payoutId,\n        },\n        data: {\n          status: \"PROCESSED\",\n          processedAt: new Date(),\n          processedBy: admin?.id || \"unknown\",\n        },\n      });\n\n      // Deduct credits from doctor's account\n      await tx.user.update({\n        where: {\n          id: payout.doctorId,\n        },\n        data: {\n          credits: {\n            decrement: payout.credits,\n          },\n        },\n      });\n\n      // Create a transaction record for the deduction\n      await tx.creditTransaction.create({\n        data: {\n          userId: payout.doctorId,\n          amount: -payout.credits,\n          type: \"ADMIN_ADJUSTMENT\",\n        },\n      });\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to approve payout:\", error);\n    throw new Error(`Failed to approve payout: ${error.message}`);\n  }\n}\n"],"names":[],"mappings":";;;;;;IAkFsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/hooks/use-fetch.js"],"sourcesContent":["import { useState } from \"react\";\nimport { toast } from \"sonner\";\n\nconst useFetch = (cb) => {\n  const [data, setData] = useState(undefined);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fn = async (...args) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await cb(...args);\n      setData(response);\n      setError(null);\n    } catch (error) {\n      setError(error);\n      toast.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, loading, error, fn, setData };\n};\n\nexport default useFetch;\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEA,MAAM,WAAW,CAAC;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QAAE;QAAM;QAAS;QAAO;QAAI;IAAQ;AAC7C;GAtBM;uCAwBS","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/admin/components/pending-doctors.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Check, X, User, Medal, FileText, ExternalLink } from \"lucide-react\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { format } from \"date-fns\";\nimport { updateDoctorStatus } from \"@/actions/admin\";\nimport useFetch from \"@/hooks/use-fetch\";\nimport { useEffect } from \"react\";\nimport { BarLoader } from \"react-spinners\";\n\nexport function PendingDoctors({ doctors }) {\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n\n  // Custom hook for approve/reject server action\n  const {\n    loading,\n    data,\n    fn: submitStatusUpdate,\n  } = useFetch(updateDoctorStatus);\n\n  // Open doctor details dialog\n  const handleViewDetails = (doctor) => {\n    setSelectedDoctor(doctor);\n  };\n\n  // Close doctor details dialog\n  const handleCloseDialog = () => {\n    setSelectedDoctor(null);\n  };\n\n  // Handle approve or reject doctor\n  const handleUpdateStatus = async (doctorId, status) => {\n    if (loading) return;\n\n    const formData = new FormData();\n    formData.append(\"doctorId\", doctorId);\n    formData.append(\"status\", status);\n\n    await submitStatusUpdate(formData);\n  };\n\n  useEffect(() => {\n    if (data && data?.success) {\n      handleCloseDialog();\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <Card className=\"bg-muted/20 border-emerald-900/20\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-bold text-white\">\n            Pending Doctor Verifications\n          </CardTitle>\n          <CardDescription>\n            Review and approve doctor applications\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {doctors.length === 0 ? (\n            <div className=\"text-center py-8 text-muted-foreground\">\n              No pending verification requests at this time.\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {doctors.map((doctor) => (\n                <Card\n                  key={doctor.id}\n                  className=\"bg-background border-emerald-900/20 hover:border-emerald-700/30 transition-all\"\n                >\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"bg-muted/20 rounded-full p-2\">\n                          <User className=\"h-5 w-5 text-emerald-400\" />\n                        </div>\n                        <div>\n                          <h3 className=\"font-medium text-white\">\n                            {doctor.name}\n                          </h3>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {doctor.specialty} • {doctor.experience} years\n                            experience\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-2 self-end md:self-auto\">\n                        <Badge\n                          variant=\"outline\"\n                          className=\"bg-amber-900/20 border-amber-900/30 text-amber-400\"\n                        >\n                          Pending\n                        </Badge>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleViewDetails(doctor)}\n                          className=\"border-emerald-900/30 hover:bg-muted/80\"\n                        >\n                          View Details\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Doctor Details Dialog */}\n      {selectedDoctor && (\n        <Dialog open={!!selectedDoctor} onOpenChange={handleCloseDialog}>\n          <DialogContent className=\"max-w-3xl\">\n            <DialogHeader>\n              <DialogTitle className=\"text-xl font-bold text-white\">\n                Doctor Verification Details\n              </DialogTitle>\n              <DialogDescription>\n                Review the doctor&apos;s information carefully before making a\n                decision\n              </DialogDescription>\n            </DialogHeader>\n\n            <div className=\"space-y-6 py-4\">\n              {/* Basic Info */}\n              <div className=\"flex flex-col md:flex-row gap-6\">\n                <div className=\"space-y-1 flex-1\">\n                  <h4 className=\"text-sm font-medium text-muted-foreground\">\n                    Full Name\n                  </h4>\n                  <p className=\"text-base font-medium text-white\">\n                    {selectedDoctor.name}\n                  </p>\n                </div>\n                <div className=\"space-y-1 flex-1\">\n                  <h4 className=\"text-sm font-medium text-muted-foreground\">\n                    Email\n                  </h4>\n                  <p className=\"text-base font-medium text-white\">\n                    {selectedDoctor.email}\n                  </p>\n                </div>\n                <div className=\"space-y-1 flex-1\">\n                  <h4 className=\"text-sm font-medium text-muted-foreground\">\n                    Application Date\n                  </h4>\n                  <p className=\"text-base font-medium text-white\">\n                    {format(new Date(selectedDoctor.createdAt), \"PPP\")}\n                  </p>\n                </div>\n              </div>\n\n              <Separator className=\"bg-emerald-900/20\" />\n\n              {/* Professional Details */}\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Medal className=\"h-5 w-5 text-emerald-400\" />\n                  <h3 className=\"text-white font-medium\">\n                    Professional Information\n                  </h3>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-y-4 gap-x-6\">\n                  <div className=\"space-y-1\">\n                    <h4 className=\"text-sm font-medium text-muted-foreground\">\n                      Specialty\n                    </h4>\n                    <p className=\"text-white\">{selectedDoctor.specialty}</p>\n                  </div>\n\n                  <div className=\"space-y-1\">\n                    <h4 className=\"text-sm font-medium text-muted-foreground\">\n                      Years of Experience\n                    </h4>\n                    <p className=\"text-white\">\n                      {selectedDoctor.experience} years\n                    </p>\n                  </div>\n\n                  <div className=\"space-y-1 col-span-2\">\n                    <h4 className=\"text-sm font-medium text-muted-foreground\">\n                      Credentials\n                    </h4>\n                    <div className=\"flex items-center\">\n                      <a\n                        href={selectedDoctor.credentialUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-emerald-400 hover:text-emerald-300 flex items-center\"\n                      >\n                        View Credentials\n                        <ExternalLink className=\"h-4 w-4 ml-1\" />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <Separator className=\"bg-emerald-900/20\" />\n\n              {/* Description */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <FileText className=\"h-5 w-5 text-emerald-400\" />\n                  <h3 className=\"text-white font-medium\">\n                    Service Description\n                  </h3>\n                </div>\n                <p className=\"text-muted-foreground whitespace-pre-line\">\n                  {selectedDoctor.description}\n                </p>\n              </div>\n            </div>\n\n            {loading && <BarLoader width={\"100%\"} color=\"#36d7b7\" />}\n\n            <DialogFooter className=\"flex sm:justify-between\">\n              <Button\n                variant=\"destructive\"\n                onClick={() =>\n                  handleUpdateStatus(selectedDoctor.id, \"REJECTED\")\n                }\n                disabled={loading}\n                className=\"bg-red-600 hover:bg-red-700\"\n              >\n                <X className=\"mr-2 h-4 w-4\" />\n                Reject\n              </Button>\n              <Button\n                onClick={() =>\n                  handleUpdateStatus(selectedDoctor.id, \"VERIFIED\")\n                }\n                disabled={loading}\n                className=\"bg-emerald-600 hover:bg-emerald-700\"\n              >\n                <Check className=\"mr-2 h-4 w-4\" />\n                Approve\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1173, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({\n  className,\n  type,\n  ...props\n}) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,MAAM,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/actions/admin.js"],"sourcesContent":["\"use server\";\n\nimport { db } from \"@/lib/prisma\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { revalidatePath } from \"next/cache\";\n\n/**\n * Verifies if current user has admin role\n */\nexport async function verifyAdmin() {\n  const { userId } = await auth();\n\n  if (!userId) {\n    return false;\n  }\n\n  try {\n    const user = await db.user.findUnique({\n      where: {\n        clerkUserId: userId,\n      },\n    });\n\n    return user?.role === \"ADMIN\";\n  } catch (error) {\n    console.error(\"Failed to verify admin:\", error);\n    return false;\n  }\n}\n\n/**\n * Gets all doctors with pending verification\n */\nexport async function getPendingDoctors() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const pendingDoctors = await db.user.findMany({\n      where: {\n        role: \"DOCTOR\",\n        verificationStatus: \"PENDING\",\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    return { doctors: pendingDoctors };\n  } catch (error) {\n    throw new Error(\"Failed to fetch pending doctors\");\n  }\n}\n\n/**\n * Gets all verified doctors\n */\nexport async function getVerifiedDoctors() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const verifiedDoctors = await db.user.findMany({\n      where: {\n        role: \"DOCTOR\",\n        verificationStatus: \"VERIFIED\",\n      },\n      orderBy: {\n        name: \"asc\",\n      },\n    });\n\n    return { doctors: verifiedDoctors };\n  } catch (error) {\n    console.error(\"Failed to get verified doctors:\", error);\n    return { error: \"Failed to fetch verified doctors\" };\n  }\n}\n\n/**\n * Updates a doctor's verification status\n */\nexport async function updateDoctorStatus(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const doctorId = formData.get(\"doctorId\");\n  const status = formData.get(\"status\");\n\n  if (!doctorId || ![\"VERIFIED\", \"REJECTED\"].includes(status)) {\n    throw new Error(\"Invalid input\");\n  }\n\n  try {\n    await db.user.update({\n      where: {\n        id: doctorId,\n      },\n      data: {\n        verificationStatus: status,\n      },\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to update doctor status:\", error);\n    throw new Error(`Failed to update doctor status: ${error.message}`);\n  }\n}\n\n/**\n * Suspends or reinstates a doctor\n */\nexport async function updateDoctorActiveStatus(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const doctorId = formData.get(\"doctorId\");\n  const suspend = formData.get(\"suspend\") === \"true\";\n\n  if (!doctorId) {\n    throw new Error(\"Doctor ID is required\");\n  }\n\n  try {\n    const status = suspend ? \"PENDING\" : \"VERIFIED\";\n\n    await db.user.update({\n      where: {\n        id: doctorId,\n      },\n      data: {\n        verificationStatus: status,\n      },\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to update doctor active status:\", error);\n    throw new Error(`Failed to update doctor status: ${error.message}`);\n  }\n}\n\n/**\n * Gets all pending payouts that need admin approval\n */\nexport async function getPendingPayouts() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const pendingPayouts = await db.payout.findMany({\n      where: {\n        status: \"PROCESSING\",\n      },\n      include: {\n        doctor: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            specialty: true,\n            credits: true,\n          },\n        },\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    return { payouts: pendingPayouts };\n  } catch (error) {\n    console.error(\"Failed to fetch pending payouts:\", error);\n    throw new Error(\"Failed to fetch pending payouts\");\n  }\n}\n\n/**\n * Approves a payout request and deducts credits from doctor's account\n */\nexport async function approvePayout(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const payoutId = formData.get(\"payoutId\");\n\n  if (!payoutId) {\n    throw new Error(\"Payout ID is required\");\n  }\n\n  try {\n    // Get admin user info\n    const { userId } = await auth();\n    const admin = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    // Find the payout request\n    const payout = await db.payout.findUnique({\n      where: {\n        id: payoutId,\n        status: \"PROCESSING\",\n      },\n      include: {\n        doctor: true,\n      },\n    });\n\n    if (!payout) {\n      throw new Error(\"Payout request not found or already processed\");\n    }\n\n    // Check if doctor has enough credits\n    if (payout.doctor.credits < payout.credits) {\n      throw new Error(\"Doctor doesn't have enough credits for this payout\");\n    }\n\n    // Process the payout in a transaction\n    await db.$transaction(async (tx) => {\n      // Update payout status to PROCESSED\n      await tx.payout.update({\n        where: {\n          id: payoutId,\n        },\n        data: {\n          status: \"PROCESSED\",\n          processedAt: new Date(),\n          processedBy: admin?.id || \"unknown\",\n        },\n      });\n\n      // Deduct credits from doctor's account\n      await tx.user.update({\n        where: {\n          id: payout.doctorId,\n        },\n        data: {\n          credits: {\n            decrement: payout.credits,\n          },\n        },\n      });\n\n      // Create a transaction record for the deduction\n      await tx.creditTransaction.create({\n        data: {\n          userId: payout.doctorId,\n          amount: -payout.credits,\n          type: \"ADMIN_ADJUSTMENT\",\n        },\n      });\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to approve payout:\", error);\n    throw new Error(`Failed to approve payout: ${error.message}`);\n  }\n}\n"],"names":[],"mappings":";;;;;;IAkHsB,2BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1223, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/admin/components/verified-doctors.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Check, Ban, Loader2, User, Search } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { updateDoctorActiveStatus } from \"@/actions/admin\";\nimport useFetch from \"@/hooks/use-fetch\";\nimport { toast } from \"sonner\";\n\nexport function VerifiedDoctors({ doctors }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [targetDoctor, setTargetDoctor] = useState(null);\n  const [actionType, setActionType] = useState(null);\n\n  const {\n    loading,\n    data,\n    fn: submitStatusUpdate,\n  } = useFetch(updateDoctorActiveStatus);\n\n  const filteredDoctors = doctors.filter((doctor) => {\n    const query = searchTerm.toLowerCase();\n    return (\n      doctor.name.toLowerCase().includes(query) ||\n      doctor.specialty.toLowerCase().includes(query) ||\n      doctor.email.toLowerCase().includes(query)\n    );\n  });\n\n  const handleStatusChange = async (doctor, suspend) => {\n    const confirmed = window.confirm(\n      `Are you sure you want to ${suspend ? \"suspend\" : \"reinstate\"} ${\n        doctor.name\n      }?`\n    );\n    if (!confirmed || loading) return;\n\n    const formData = new FormData();\n    formData.append(\"doctorId\", doctor.id);\n    formData.append(\"suspend\", suspend ? \"true\" : \"false\");\n\n    setTargetDoctor(doctor);\n    setActionType(suspend ? \"SUSPEND\" : \"REINSTATE\");\n\n    await submitStatusUpdate(formData);\n  };\n\n  useEffect(() => {\n    if (data?.success && targetDoctor && actionType) {\n      const actionVerb = actionType === \"SUSPEND\" ? \"Suspended\" : \"Reinstated\";\n      toast.success(`${actionVerb} ${targetDoctor.name} successfully!`);\n      setTargetDoctor(null);\n      setActionType(null);\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <Card className=\"bg-muted/20 border-emerald-900/20\">\n        <CardHeader>\n          <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\n            <div>\n              <CardTitle className=\"text-xl font-bold text-white\">\n                Manage Doctors\n              </CardTitle>\n              <CardDescription>\n                View and manage all verified doctors\n              </CardDescription>\n            </div>\n            <div className=\"relative w-full md:w-64\">\n              <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search doctors...\"\n                className=\"pl-8 bg-background border-emerald-900/20\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent>\n          {filteredDoctors.length === 0 ? (\n            <div className=\"text-center py-8 text-muted-foreground\">\n              {searchTerm\n                ? \"No doctors match your search criteria.\"\n                : \"No verified doctors available.\"}\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {filteredDoctors.map((doctor) => {\n                const isSuspended = doctor.verificationStatus === \"REJECTED\";\n                return (\n                  <Card\n                    key={doctor.id}\n                    className=\"bg-background border-emerald-900/20 hover:border-emerald-700/30 transition-all\"\n                  >\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"bg-muted/20 rounded-full p-2\">\n                            <User className=\"h-5 w-5 text-emerald-400\" />\n                          </div>\n                          <div>\n                            <h3 className=\"font-medium text-white\">\n                              {doctor.name}\n                            </h3>\n                            <p className=\"text-sm text-muted-foreground\">\n                              {doctor.specialty} • {doctor.experience} years\n                              experience\n                            </p>\n                            <p className=\"text-sm text-muted-foreground mt-1\">\n                              {doctor.email}\n                            </p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2 self-end md:self-auto\">\n                          {isSuspended ? (\n                            <>\n                              <Badge\n                                variant=\"outline\"\n                                className=\"bg-red-900/20 border-red-900/30 text-red-400\"\n                              >\n                                Suspended\n                              </Badge>\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() =>\n                                  handleStatusChange(doctor, false)\n                                }\n                                disabled={loading}\n                                className=\"border-emerald-900/30 hover:bg-muted/80\"\n                              >\n                                {loading && targetDoctor?.id === doctor.id ? (\n                                  <Loader2 className=\"h-4 w-4 mr-1 animate-spin\" />\n                                ) : (\n                                  <Check className=\"h-4 w-4 mr-1\" />\n                                )}\n                                Reinstate\n                              </Button>\n                            </>\n                          ) : (\n                            <>\n                              <Badge\n                                variant=\"outline\"\n                                className=\"bg-emerald-900/20 border-emerald-900/30 text-emerald-400\"\n                              >\n                                Active\n                              </Badge>\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleStatusChange(doctor, true)}\n                                disabled={loading}\n                                className=\"border-red-900/30 hover:bg-red-900/10 text-red-400\"\n                              >\n                                {loading && targetDoctor?.id === doctor.id ? (\n                                  <Loader2 className=\"h-4 w-4 mr-1 animate-spin\" />\n                                ) : (\n                                  <Ban className=\"h-4 w-4 mr-1\" />\n                                )}\n                                Suspend\n                              </Button>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1573, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/components/ui/alert.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props} />\n  );\n}\n\nfunction AlertTitle({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\", className)}\n      {...props} />\n  );\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;KAZS;AAcT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,+DAA+D;QAC5E,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS","debugId":null}},
    {"offset": {"line": 1650, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/actions/admin.js"],"sourcesContent":["\"use server\";\n\nimport { db } from \"@/lib/prisma\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { revalidatePath } from \"next/cache\";\n\n/**\n * Verifies if current user has admin role\n */\nexport async function verifyAdmin() {\n  const { userId } = await auth();\n\n  if (!userId) {\n    return false;\n  }\n\n  try {\n    const user = await db.user.findUnique({\n      where: {\n        clerkUserId: userId,\n      },\n    });\n\n    return user?.role === \"ADMIN\";\n  } catch (error) {\n    console.error(\"Failed to verify admin:\", error);\n    return false;\n  }\n}\n\n/**\n * Gets all doctors with pending verification\n */\nexport async function getPendingDoctors() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const pendingDoctors = await db.user.findMany({\n      where: {\n        role: \"DOCTOR\",\n        verificationStatus: \"PENDING\",\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    return { doctors: pendingDoctors };\n  } catch (error) {\n    throw new Error(\"Failed to fetch pending doctors\");\n  }\n}\n\n/**\n * Gets all verified doctors\n */\nexport async function getVerifiedDoctors() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const verifiedDoctors = await db.user.findMany({\n      where: {\n        role: \"DOCTOR\",\n        verificationStatus: \"VERIFIED\",\n      },\n      orderBy: {\n        name: \"asc\",\n      },\n    });\n\n    return { doctors: verifiedDoctors };\n  } catch (error) {\n    console.error(\"Failed to get verified doctors:\", error);\n    return { error: \"Failed to fetch verified doctors\" };\n  }\n}\n\n/**\n * Updates a doctor's verification status\n */\nexport async function updateDoctorStatus(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const doctorId = formData.get(\"doctorId\");\n  const status = formData.get(\"status\");\n\n  if (!doctorId || ![\"VERIFIED\", \"REJECTED\"].includes(status)) {\n    throw new Error(\"Invalid input\");\n  }\n\n  try {\n    await db.user.update({\n      where: {\n        id: doctorId,\n      },\n      data: {\n        verificationStatus: status,\n      },\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to update doctor status:\", error);\n    throw new Error(`Failed to update doctor status: ${error.message}`);\n  }\n}\n\n/**\n * Suspends or reinstates a doctor\n */\nexport async function updateDoctorActiveStatus(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const doctorId = formData.get(\"doctorId\");\n  const suspend = formData.get(\"suspend\") === \"true\";\n\n  if (!doctorId) {\n    throw new Error(\"Doctor ID is required\");\n  }\n\n  try {\n    const status = suspend ? \"PENDING\" : \"VERIFIED\";\n\n    await db.user.update({\n      where: {\n        id: doctorId,\n      },\n      data: {\n        verificationStatus: status,\n      },\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to update doctor active status:\", error);\n    throw new Error(`Failed to update doctor status: ${error.message}`);\n  }\n}\n\n/**\n * Gets all pending payouts that need admin approval\n */\nexport async function getPendingPayouts() {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  try {\n    const pendingPayouts = await db.payout.findMany({\n      where: {\n        status: \"PROCESSING\",\n      },\n      include: {\n        doctor: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            specialty: true,\n            credits: true,\n          },\n        },\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    return { payouts: pendingPayouts };\n  } catch (error) {\n    console.error(\"Failed to fetch pending payouts:\", error);\n    throw new Error(\"Failed to fetch pending payouts\");\n  }\n}\n\n/**\n * Approves a payout request and deducts credits from doctor's account\n */\nexport async function approvePayout(formData) {\n  const isAdmin = await verifyAdmin();\n  if (!isAdmin) throw new Error(\"Unauthorized\");\n\n  const payoutId = formData.get(\"payoutId\");\n\n  if (!payoutId) {\n    throw new Error(\"Payout ID is required\");\n  }\n\n  try {\n    // Get admin user info\n    const { userId } = await auth();\n    const admin = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    // Find the payout request\n    const payout = await db.payout.findUnique({\n      where: {\n        id: payoutId,\n        status: \"PROCESSING\",\n      },\n      include: {\n        doctor: true,\n      },\n    });\n\n    if (!payout) {\n      throw new Error(\"Payout request not found or already processed\");\n    }\n\n    // Check if doctor has enough credits\n    if (payout.doctor.credits < payout.credits) {\n      throw new Error(\"Doctor doesn't have enough credits for this payout\");\n    }\n\n    // Process the payout in a transaction\n    await db.$transaction(async (tx) => {\n      // Update payout status to PROCESSED\n      await tx.payout.update({\n        where: {\n          id: payoutId,\n        },\n        data: {\n          status: \"PROCESSED\",\n          processedAt: new Date(),\n          processedBy: admin?.id || \"unknown\",\n        },\n      });\n\n      // Deduct credits from doctor's account\n      await tx.user.update({\n        where: {\n          id: payout.doctorId,\n        },\n        data: {\n          credits: {\n            decrement: payout.credits,\n          },\n        },\n      });\n\n      // Create a transaction record for the deduction\n      await tx.creditTransaction.create({\n        data: {\n          userId: payout.doctorId,\n          amount: -payout.credits,\n          type: \"ADMIN_ADJUSTMENT\",\n        },\n      });\n    });\n\n    revalidatePath(\"/admin\");\n    return { success: true };\n  } catch (error) {\n    console.error(\"Failed to approve payout:\", error);\n    throw new Error(`Failed to approve payout: ${error.message}`);\n  }\n}\n"],"names":[],"mappings":";;;;;;IAuLsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1666, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasanalmahadi/WebProject/medimeet/app/%28main%29/admin/components/pending-payouts.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Check,\n  User,\n  DollarSign,\n  Mail,\n  Stethoscope,\n  Loader2,\n  AlertCircle,\n} from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { format } from \"date-fns\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { approvePayout } from \"@/actions/admin\";\nimport useFetch from \"@/hooks/use-fetch\";\nimport { toast } from \"sonner\";\nimport { BarLoader } from \"react-spinners\";\n\nexport function PendingPayouts({ payouts }) {\n  const [selectedPayout, setSelectedPayout] = useState(null);\n  const [showApproveDialog, setShowApproveDialog] = useState(false);\n\n  // Custom hook for approve payout server action\n  const { loading, data, fn: submitApproval } = useFetch(approvePayout);\n\n  // Handle view details\n  const handleViewDetails = (payout) => {\n    setSelectedPayout(payout);\n  };\n\n  // Handle approve payout\n  const handleApprovePayout = (payout) => {\n    setSelectedPayout(payout);\n    setShowApproveDialog(true);\n  };\n\n  // Confirm approval\n  const confirmApproval = async () => {\n    if (!selectedPayout || loading) return;\n\n    const formData = new FormData();\n    formData.append(\"payoutId\", selectedPayout.id);\n\n    await submitApproval(formData);\n  };\n\n  useEffect(() => {\n    if (data?.success) {\n      setShowApproveDialog(false);\n      setSelectedPayout(null);\n      toast.success(\"Payout approved successfully!\");\n    }\n  }, [data]);\n\n  const closeDialogs = () => {\n    setSelectedPayout(null);\n    setShowApproveDialog(false);\n  };\n\n  return (\n    <div>\n      <Card className=\"bg-muted/20 border-emerald-900/20\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-bold text-white\">\n            Pending Payouts\n          </CardTitle>\n          <CardDescription>\n            Review and approve doctor payout requests\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {payouts.length === 0 ? (\n            <div className=\"text-center py-8 text-muted-foreground\">\n              No pending payout requests at this time.\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {payouts.map((payout) => (\n                <Card\n                  key={payout.id}\n                  className=\"bg-background border-emerald-900/20 hover:border-emerald-700/30 transition-all\"\n                >\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"bg-muted/20 rounded-full p-2 mt-1\">\n                          <User className=\"h-5 w-5 text-emerald-400\" />\n                        </div>\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-medium text-white\">\n                            Dr. {payout.doctor.name}\n                          </h3>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {payout.doctor.specialty}\n                          </p>\n                          <div className=\"flex flex-wrap items-center gap-4 mt-2 text-sm text-muted-foreground\">\n                            <div className=\"flex items-center\">\n                              <DollarSign className=\"h-4 w-4 mr-1 text-emerald-400\" />\n                              <span>\n                                {payout.credits} credits • $\n                                {payout.netAmount.toFixed(2)}\n                              </span>\n                            </div>\n                            <div className=\"flex items-center\">\n                              <Mail className=\"h-4 w-4 mr-1 text-emerald-400\" />\n                              <span className=\"text-xs\">\n                                {payout.paypalEmail}\n                              </span>\n                            </div>\n                          </div>\n                          <p className=\"text-xs text-muted-foreground mt-1\">\n                            Requested{\" \"}\n                            {format(\n                              new Date(payout.createdAt),\n                              \"MMM d, yyyy 'at' h:mm a\"\n                            )}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col sm:flex-row gap-2 self-end lg:self-center\">\n                        <Badge\n                          variant=\"outline\"\n                          className=\"bg-amber-900/20 border-amber-900/30 text-amber-400 w-fit\"\n                        >\n                          Pending\n                        </Badge>\n                        <div className=\"flex gap-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleViewDetails(payout)}\n                            className=\"border-emerald-900/30 hover:bg-muted/80\"\n                          >\n                            View Details\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            onClick={() => handleApprovePayout(payout)}\n                            className=\"bg-emerald-600 hover:bg-emerald-700\"\n                          >\n                            <Check className=\"h-4 w-4 mr-1\" />\n                            Approve\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Payout Details Dialog */}\n      {selectedPayout && !showApproveDialog && (\n        <Dialog open={!!selectedPayout} onOpenChange={closeDialogs}>\n          <DialogContent className=\"max-w-2xl\">\n            <DialogHeader>\n              <DialogTitle className=\"text-xl font-bold text-white\">\n                Payout Request Details\n              </DialogTitle>\n              <DialogDescription>\n                Review the payout request information\n              </DialogDescription>\n            </DialogHeader>\n\n            <div className=\"space-y-6 py-4\">\n              {/* Doctor Information */}\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Stethoscope className=\"h-5 w-5 text-emerald-400\" />\n                  <h3 className=\"text-white font-medium\">Doctor Information</h3>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">\n                      Name\n                    </p>\n                    <p className=\"text-white\">\n                      Dr. {selectedPayout.doctor.name}\n                    </p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">\n                      Email\n                    </p>\n                    <p className=\"text-white\">{selectedPayout.doctor.email}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">\n                      Specialty\n                    </p>\n                    <p className=\"text-white\">\n                      {selectedPayout.doctor.specialty}\n                    </p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">\n                      Current Credits\n                    </p>\n                    <p className=\"text-white\">\n                      {selectedPayout.doctor.credits}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Payout Information */}\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-2\">\n                  <DollarSign className=\"h-5 w-5 text-emerald-400\" />\n                  <h3 className=\"text-white font-medium\">Payout Details</h3>\n                </div>\n                <div className=\"bg-muted/20 p-4 rounded-lg border border-emerald-900/20 space-y-3\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">\n                      Credits to pay out:\n                    </span>\n                    <span className=\"text-white font-medium\">\n                      {selectedPayout.credits}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">\n                      Gross amount (10 USD/credit):\n                    </span>\n                    <span className=\"text-white\">\n                      ${selectedPayout.amount.toFixed(2)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">\n                      Platform fee (2 USD/credit):\n                    </span>\n                    <span className=\"text-white\">\n                      -${selectedPayout.platformFee.toFixed(2)}\n                    </span>\n                  </div>\n                  <div className=\"border-t border-emerald-900/20 pt-3 flex justify-between font-medium\">\n                    <span className=\"text-white\">Net payout:</span>\n                    <span className=\"text-emerald-400\">\n                      ${selectedPayout.netAmount.toFixed(2)}\n                    </span>\n                  </div>\n                  <div className=\"border-t border-emerald-900/20 pt-3\">\n                    <p className=\"text-sm font-medium text-muted-foreground\">\n                      PayPal Email\n                    </p>\n                    <p className=\"text-white\">{selectedPayout.paypalEmail}</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Warning if insufficient credits */}\n              {selectedPayout.doctor.credits < selectedPayout.credits && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>\n                    Warning: Doctor currently has only{\" \"}\n                    {selectedPayout.doctor.credits} credits but this payout\n                    requires {selectedPayout.credits} credits. The payout cannot\n                    be processed.\n                  </AlertDescription>\n                </Alert>\n              )}\n            </div>\n\n            <DialogFooter>\n              <Button\n                variant=\"outline\"\n                onClick={closeDialogs}\n                className=\"border-emerald-900/30\"\n              >\n                Close\n              </Button>\n              <Button\n                onClick={() => handleApprovePayout(selectedPayout)}\n                disabled={\n                  selectedPayout.doctor.credits < selectedPayout.credits\n                }\n                className=\"bg-emerald-600 hover:bg-emerald-700\"\n              >\n                <Check className=\"h-4 w-4 mr-1\" />\n                Approve Payout\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      )}\n\n      {/* Approval Confirmation Dialog */}\n      {showApproveDialog && selectedPayout && (\n        <Dialog\n          open={showApproveDialog}\n          onOpenChange={() => setShowApproveDialog(false)}\n        >\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle className=\"text-xl font-bold text-white\">\n                Confirm Payout Approval\n              </DialogTitle>\n              <DialogDescription>\n                Are you sure you want to approve this payout?\n              </DialogDescription>\n            </DialogHeader>\n\n            <div className=\"space-y-4 py-4\">\n              <Alert>\n                <AlertCircle className=\"h-4 w-4\" />\n                <AlertDescription>\n                  This action will:\n                  <ul className=\"mt-2 space-y-1 list-disc pl-4\">\n                    <li>\n                      Deduct {selectedPayout.credits} credits from Dr.{\" \"}\n                      {selectedPayout.doctor.name}'s account\n                    </li>\n                    <li>Mark the payout as PROCESSED</li>\n                    <li>This action cannot be undone</li>\n                  </ul>\n                </AlertDescription>\n              </Alert>\n\n              <div className=\"bg-muted/20 p-4 rounded-lg border border-emerald-900/20\">\n                <div className=\"flex justify-between mb-2\">\n                  <span className=\"text-muted-foreground\">Doctor:</span>\n                  <span className=\"text-white\">\n                    Dr. {selectedPayout.doctor.name}\n                  </span>\n                </div>\n                <div className=\"flex justify-between mb-2\">\n                  <span className=\"text-muted-foreground\">Amount to pay:</span>\n                  <span className=\"text-emerald-400 font-medium\">\n                    ${selectedPayout.netAmount.toFixed(2)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">PayPal:</span>\n                  <span className=\"text-white text-sm\">\n                    {selectedPayout.paypalEmail}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {loading && <BarLoader width={\"100%\"} color=\"#36d7b7\" />}\n\n            <DialogFooter>\n              <Button\n                variant=\"outline\"\n                onClick={() => setShowApproveDialog(false)}\n                disabled={loading}\n                className=\"border-emerald-900/30\"\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={confirmApproval}\n                disabled={loading}\n                className=\"bg-emerald-600 hover:bg-emerald-700\"\n              >\n                {loading ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <Check className=\"mr-2 h-4 w-4\" />\n                    Confirm Approval\n                  </>\n                )}\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}